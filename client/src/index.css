@tailwind base;
@tailwind components;
@tailwind utilities;
.profilePhoto{
  border-radius: 50%;
}
#root{
  width: 100vw;
}
.containerScrollPage{
  position: fixed;
  left: 4%;
  width: 64vw;
}
.inbox{
  margin-left: 1em;
  margin-top: 0.2em;
}
.timeAgo{
  margin-left: -6.5em;
  margin-top: 1.9em;
  font-size: 0.7em;
}
.containerSearchBox{
  position:  fixed;
  left: 3%; 
  top: 0;
}
.containerNotificaion{
  position:  fixed;
  left: 3%; 
  top: 0;
}
.containerExplorePage{
  position: fixed;
  left: 4%;
  width: 64vw;
}
i:hover{
  color: yellow;
  filter: drop-shadow(0 0 0.75rem white);
}
h3{
  margin-left: 1.5em;
  margin-top: 1em;
  font-weight: 600;
}
.messages i:hover{
  color: aliceblue;
  filter: drop-shadow(0 0 0.50rem white);
  
}
/* App.css */

.container2.light {
  background-color: white;
  color: black;
}

.container2.dark {
  background-color: black;
  color: white;
}

/* Additional styles */

.containerScrollPage {
  overflow-y: auto;
}

.post-container {
  /* margin-bottom: 16px; Add some margin between posts */
}
.containerPost{
  margin: 0;
}
.containerAddPost{
  position: fixed;
  left: 18%;
  top: 20%;
  height: 60vh;
  border-radius: 15px;
  /* border: 3px white solid; */
  filter: drop-shadow(0 0 0.50rem white);
  transition: filter ease-in-out 0.5s;

}
.blur{
  filter: blur(3px);
  transition: filter ease-in-out 0.5s;
}
html{
  background-color: black;
}
/* From uiverse.io by @satyamchaudharydev */
/* this button is inspired by -- whatsapp input */
/* == type to see fully interactive and click the close buttom to remove the text  == */

.form {
  --input-bg: #FFf;
 /*  background of input */
  --padding: 1.5em;
  --rotate: 80deg;
 /*  rotation degree of input*/
  --gap: 2em;
  /*  gap of items in input */
  --icon-change-color: #15A986;
 /*  when rotating changed icon color */
  --height: 40px;
 /*  height */
  width: 200px;
  padding-inline-end: 1em;
 /*  change this for padding in the end of input */
  background: var(--input-bg);
  position: relative;
  border-radius: 4px;
}

.form label {
  display: flex;
  align-items: center;
  width: 100%;
  height: var(--height);
}

.form input {
  width: 100%;
  padding-inline-start: calc(var(--padding) + var(--gap));
  outline: none;
  background: none;
  border: 0;
}
/* style for both icons -- search,close */
.form svg {
  /* display: block; */
  color: #111;
  transition: 0.3s cubic-bezier(.4,0,.2,1);
  position: absolute;
  height: 15px;
}
/* search icon */
.icon {
  position: absolute;
  left: var(--padding);
  transition: 0.3s cubic-bezier(.4,0,.2,1);
  display: flex;
  justify-content: center;
  align-items: center;
}
/* arrow-icon*/
.swap-off {
  transform: rotate(-80deg);
  opacity: 0;
  visibility: hidden;
}
/* close button */
.close-btn {
  /* removing default bg of button */
  background: none;
  border: none;
  right: calc(var(--padding) - var(--gap));
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #111;
  padding: 0.1em;
  width: 20px;
  height: 20px;
  border-radius: 50%;
  transition: 0.3s;
  opacity: 0;
  transform: scale(0);
  visibility: hidden;
}

.form input:focus ~ .icon {
  transform: rotate(var(--rotate)) scale(1.3);
}

.form input:focus ~ .icon .swap-off {
  opacity: 1;
  transform: rotate(-80deg);
  visibility: visible;
  color: var(--icon-change-color);
}

.form input:focus ~ .icon .swap-on {
  opacity: 0;
  visibility: visible;
}

.form input:valid ~ .icon {
  transform: scale(1.3) rotate(var(--rotate))
}

.form input:valid ~ .icon .swap-off {
  opacity: 1;
  visibility: visible;
  color: var(--icon-change-color);
}

.form input:valid ~ .icon .swap-on {
  opacity: 0;
  visibility: visible;
}

.form input:valid ~ .close-btn {
  opacity: 1;
  visibility: visible;
  transform: scale(1);
  transition: 0s;
}
/* width */
::-webkit-scrollbar {
  width: 2px;
  height: 5px;
}
::-webkit-scrollbar-track {
  background: #121111;
}
::-webkit-scrollbar-thumb {
  height: 2px;
  max-height: 2px;

  background: #db0000;
}
::-webkit-scrollbar-thumb:hover {
  background: red;
}
input::placeholder{
  color: rgb(194, 194, 194);
  /* margin-left: 1em; */
  align-self: center;
  text-align: center;
}
input{
text-align: center;
}
/* .comm{
  background-color: black;
  width: 32vw;
  z-index: 20;
  position: fixed;
  top: 87%;
  right: 0%;
  height: 13vh;
  border-top: 2px solid #3d3a3a;
} */.containerInbox {
  background-color: black; /* Black background for the container */
}

.infinity-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px; /* Adjust as needed */
  margin-top: 20px; /* Adjust as needed */
}

.st0 {
  fill: none;
  stroke: url(#gradient); /* Use gradient stroke */
  stroke-width: 2;
  stroke-miterlimit: 10;
 
}

.path-animation {
  stroke-dasharray: 100;
  stroke-dashoffset: 100;
  animation: dash 2s linear infinite;
}

@keyframes dash {
  to {
    stroke-dashoffset: 0;
  }
}
